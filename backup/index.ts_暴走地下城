import {bytes2HexString, bytes2String, dumpSo, show_maps, stacks} from "./utils";

function hook_java() {
    if (Java.available) {
        Java.perform(function () {
            const proxy = Java.use("android.content.pm.IPackageManager$Stub$Proxy");
            console.log(`proxy - ${proxy}`);
            proxy.getPackageInfo.implementation = function (packageName: string, flags: number, userId: number) {
                const ret = this.getPackageInfo(packageName, flags, userId);
                if (packageName.indexOf("com.gkd.ci58") != -1 && flags == 64) {
                    stacks("get signature");
                    console.log(`[getPackageInfo] packageName - ${packageName},  flags - ${flags}, userId - ${userId}, packageInfo - ${ret}`);

                    const packageInfo_ins = Java.cast(ret, Java.use("android.content.pm.PackageInfo"));
                    const signatures_ins = packageInfo_ins.signatures.value;
                    const signature = Java.cast(signatures_ins[0], Java.use("android.content.pm.Signature"));
                    signature.mSignature.value = Java.array('byte', [
                        0x30, 0x82, 0x3, 0x6f, 0x30, 0x82, 0x2, 0x57, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x4, 0x2e,
                        0xf0, 0xff, 0x19, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0xb,
                        0x5, 0x0, 0x30, 0x68, 0x31, 0xb, 0x30, 0x9, 0x6, 0x3, 0x55, 0x4, 0x6, 0x13, 0x2, 0x38,
                        0x36, 0x31, 0x10, 0x30, 0xe, 0x6, 0x3, 0x55, 0x4, 0x8, 0x13, 0x7, 0x42, 0x65, 0x69, 0x6a,
                        0x69, 0x6e, 0x67, 0x31, 0x10, 0x30, 0xe, 0x6, 0x3, 0x55, 0x4, 0x7, 0x13, 0x7, 0x42, 0x65,
                        0x69, 0x6a, 0x69, 0x6e, 0x67, 0x31, 0xd, 0x30, 0xb, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x4,
                        0x57, 0x61, 0x6c, 0x69, 0x31, 0xf, 0x30, 0xd, 0x6, 0x3, 0x55, 0x4, 0xb, 0x13, 0x6, 0x58,
                        0x69, 0x61, 0x6f, 0x6d, 0x69, 0x31, 0x15, 0x30, 0x13, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0xc,
                        0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x57, 0x61, 0x72, 0x30, 0x1e, 0x17, 0xd,
                        0x32, 0x31, 0x31, 0x31, 0x31, 0x37, 0x30, 0x39, 0x30, 0x39, 0x35, 0x34, 0x5a, 0x17, 0xd, 0x34,
                        0x36, 0x31, 0x31, 0x31, 0x31, 0x30, 0x39, 0x30, 0x39, 0x35, 0x34, 0x5a, 0x30, 0x68, 0x31, 0xb,
                        0x30, 0x9, 0x6, 0x3, 0x55, 0x4, 0x6, 0x13, 0x2, 0x38, 0x36, 0x31, 0x10, 0x30, 0xe, 0x6,
                        0x3, 0x55, 0x4, 0x8, 0x13, 0x7, 0x42, 0x65, 0x69, 0x6a, 0x69, 0x6e, 0x67, 0x31, 0x10, 0x30,
                        0xe, 0x6, 0x3, 0x55, 0x4, 0x7, 0x13, 0x7, 0x42, 0x65, 0x69, 0x6a, 0x69, 0x6e, 0x67, 0x31,
                        0xd, 0x30, 0xb, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x4, 0x57, 0x61, 0x6c, 0x69, 0x31, 0xf,
                        0x30, 0xd, 0x6, 0x3, 0x55, 0x4, 0xb, 0x13, 0x6, 0x58, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x31,
                        0x15, 0x30, 0x13, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0xc, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
                        0x74, 0x79, 0x20, 0x57, 0x61, 0x72, 0x30, 0x82, 0x1, 0x22, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86,
                        0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x3, 0x82, 0x1, 0xf, 0x0, 0x30, 0x82,
                        0x1, 0xa, 0x2, 0x82, 0x1, 0x1, 0x0, 0xbb, 0x4c, 0xe7, 0x3c, 0x25, 0xa5, 0x69, 0xd5, 0xf7,
                        0x30, 0x57, 0x68, 0x80, 0x4a, 0xf8, 0x4e, 0x9, 0x8c, 0xe4, 0x86, 0xdd, 0xad, 0xad, 0xec, 0xc6,
                        0xe7, 0x2f, 0x2e, 0xf8, 0x5e, 0x5, 0x88, 0xe9, 0xf6, 0xd5, 0x89, 0xe, 0xb6, 0x2d, 0xb4, 0x7f,
                        0x5e, 0x19, 0x6b, 0xb8, 0xbb, 0x32, 0xf, 0xe0, 0x4d, 0x1e, 0x2b, 0xca, 0x40, 0xf7, 0x4f, 0x43,
                        0x2c, 0xc9, 0xc7, 0xd, 0x42, 0x89, 0x7a, 0x26, 0xc0, 0x9d, 0x8b, 0x6e, 0x2d, 0x82, 0xb2, 0x18,
                        0x6f, 0x85, 0x86, 0x65, 0xaa, 0xf9, 0xb8, 0xa7, 0x76, 0xab, 0xe6, 0xe4, 0x95, 0xe5, 0xeb, 0x84,
                        0x1a, 0x9d, 0x5c, 0x13, 0x97, 0xbc, 0xef, 0xfd, 0x8e, 0x61, 0x8c, 0xa0, 0x3c, 0x51, 0xba, 0x34,
                        0xa4, 0x2d, 0x69, 0x72, 0x88, 0xdc, 0xc2, 0x7a, 0x96, 0x9d, 0xde, 0x6b, 0xff, 0x8b, 0xa, 0x75,
                        0x46, 0xdd, 0x36, 0xf3, 0x8b, 0x26, 0x77, 0xc8, 0x83, 0xe0, 0x42, 0x3c, 0x75, 0x21, 0xc0, 0xc2,
                        0xad, 0x21, 0x1c, 0x9a, 0x16, 0x85, 0x9, 0xab, 0xb5, 0x18, 0x9a, 0x60, 0xad, 0x9c, 0xbd, 0x48,
                        0x7c, 0x98, 0x89, 0x9b, 0xaf, 0x43, 0xff, 0x6c, 0x15, 0xb0, 0x2d, 0x4d, 0xde, 0xff, 0x2e, 0xc2,
                        0xba, 0xbf, 0xe7, 0x35, 0xdc, 0x9c, 0xdf, 0x37, 0x3b, 0x79, 0x68, 0x7f, 0x3c, 0xd4, 0x2e, 0xfa,
                        0xc0, 0x9d, 0x6b, 0x4d, 0xe0, 0x7a, 0xf7, 0xb4, 0xbd, 0x87, 0xfd, 0x55, 0x22, 0x8d, 0xf3, 0xc2,
                        0x9e, 0x80, 0x68, 0xc7, 0x51, 0x7f, 0xe6, 0xe8, 0xf4, 0xc7, 0xad, 0xe7, 0xf5, 0x94, 0xe7, 0xa1,
                        0x8a, 0x86, 0x1d, 0xb1, 0x90, 0x75, 0xd6, 0xa4, 0xb7, 0x55, 0x48, 0x16, 0xee, 0x14, 0x3e, 0x36,
                        0x62, 0x1f, 0xb0, 0xcc, 0xfc, 0x71, 0x55, 0xa0, 0x63, 0x62, 0x12, 0xe4, 0x2b, 0xe9, 0x65, 0xdd,
                        0x1a, 0xac, 0x11, 0xb2, 0x51, 0x1c, 0x83, 0x2, 0x3, 0x1, 0x0, 0x1, 0xa3, 0x21, 0x30, 0x1f,
                        0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe, 0x4, 0x16, 0x4, 0x14, 0xa3, 0x31, 0x77, 0xc5, 0x8b,
                        0x1e, 0xe9, 0x93, 0x46, 0xf2, 0x62, 0xce, 0x3a, 0x7d, 0xe4, 0xad, 0x46, 0x29, 0x37, 0x45, 0x30,
                        0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0xb, 0x5, 0x0, 0x3, 0x82,
                        0x1, 0x1, 0x0, 0xac, 0x41, 0x9c, 0x19, 0x48, 0xc6, 0x78, 0x65, 0x23, 0xa, 0x5d, 0xe8, 0x38,
                        0x72, 0xe2, 0x74, 0xfc, 0x92, 0x87, 0x14, 0x23, 0xcd, 0x9b, 0x84, 0xb1, 0xe3, 0xa5, 0x68, 0x61,
                        0xcf, 0x97, 0x54, 0x9c, 0x62, 0xf6, 0xf9, 0xcb, 0x3a, 0xd2, 0x56, 0xd8, 0x6, 0xce, 0x5f, 0x42,
                        0x9, 0x4f, 0x7c, 0xf1, 0xc5, 0x71, 0xa9, 0xb3, 0x9, 0x86, 0x55, 0x52, 0xe1, 0xdc, 0xf4, 0xe1,
                        0xd, 0x84, 0x1e, 0xf0, 0x89, 0xdb, 0x2f, 0x2c, 0x3b, 0x54, 0x83, 0x68, 0x3c, 0xf2, 0xc3, 0xaf,
                        0x2b, 0x2c, 0xb2, 0xe8, 0xf0, 0x22, 0x8d, 0x86, 0x2f, 0x50, 0x81, 0x77, 0x35, 0x17, 0xab, 0xa6,
                        0x92, 0xe, 0x1b, 0xb8, 0x14, 0xa1, 0x9d, 0x79, 0xcf, 0xc3, 0x85, 0xcb, 0xa3, 0x42, 0x79, 0x22,
                        0xaa, 0x47, 0xb3, 0xb1, 0xe, 0x4e, 0x78, 0xda, 0xa7, 0x2a, 0xf9, 0xfd, 0xe7, 0xcd, 0xbb, 0x53,
                        0x4f, 0xfe, 0x62, 0xb8, 0xf5, 0xa3, 0x14, 0x50, 0x79, 0x3c, 0x87, 0x3c, 0xaf, 0x14, 0x6c, 0x1,
                        0x1d, 0x32, 0x1a, 0x22, 0x5a, 0x78, 0x71, 0x75, 0x68, 0x11, 0x44, 0xb7, 0x34, 0xbb, 0x65, 0x71,
                        0x78, 0x69, 0xa8, 0x6, 0xf6, 0xc3, 0xcf, 0x38, 0xd7, 0x47, 0xf9, 0xa4, 0x44, 0x51, 0x66, 0x6d,
                        0x93, 0x6c, 0x82, 0xac, 0x2, 0x3e, 0x3d, 0xf5, 0x3c, 0x8b, 0x94, 0x35, 0x14, 0x93, 0xe2, 0x8d,
                        0x68, 0xa5, 0x57, 0x63, 0x36, 0x73, 0xa0, 0x60, 0x2, 0x80, 0xc7, 0xb5, 0x74, 0x70, 0x8a, 0x70,
                        0xce, 0x9f, 0xdd, 0x72, 0xe4, 0xc1, 0xc7, 0xba, 0x74, 0xdf, 0xde, 0x39, 0xa5, 0xeb, 0x50, 0x76,
                        0xff, 0x4, 0x33, 0xb, 0x6b, 0x91, 0x17, 0xc9, 0xc, 0x3, 0xd6, 0x9, 0xa, 0x36, 0xa9, 0x94,
                        0x5b, 0x49, 0x50, 0x73, 0xa2, 0xd4, 0x5e, 0x7d, 0x27, 0xa0, 0x93, 0x1b, 0x8a, 0xbd, 0x8e, 0x93,
                        0x65, 0xbc, 0x79
                    ]);

                    // signature.mSignature.value = Java.array('byte', [
                    //    1,2,3,4,5,6,7,8,9,0
                    // ]);
                    // bytes2HexString("mSignature: ", signature.mSignature.value);
                }

                return ret;
            }
        });
    }
}

function hook_native() {

}

// frida -U --no-pause -f com.bekko.yld.vivo -l .\_agent.js
// setTimeout(function () {
//     console.log(`\n`);
//     // hook_java();
//     hook_native();
// }, 10);

setImmediate(() => {
    hook_java();
    hook_native();
});